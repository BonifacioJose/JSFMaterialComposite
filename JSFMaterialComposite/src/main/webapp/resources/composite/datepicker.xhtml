<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://xmlns.jcp.org/jsf/core" 
      xmlns:composite="http://java.sun.com/jsf/composite"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:pt="http://xmlns.jcp.org/jsf/passthrough">

    <composite:interface>
        <composite:attribute name="id"/>
        <composite:attribute name="value"/>
        <composite:attribute name="mask"/>
        <composite:attribute name="label"/>
        <composite:attribute name="floatingLabel" type="java.lang.Boolean"/>
        <composite:attribute name="locale"/>
    </composite:interface>
    <composite:implementation>
        <div class="mdl-textfield mdl-js-textfield #{cc.attrs.floatingLabel ? 'mdl-textfield--floating-label' : ''}">
            <h:inputText id="#{cc.attrs.id}" 
                         value="#{cc.attrs.value}" 
                         converter="dateConverter"
                         styleClass="mdl-textfield__input">
                <f:convertDateTime pattern="#{cc.attrs.mask}"/>
            </h:inputText>
            <label class="mdl-textfield__label" for="#{cc.attrs.id}:#{cc.attrs.id}">#{cc.attrs.label}</label>
        </div>

        <script type="text/javascript">
            var inputText = document.getElementById('#{cc.attrs.id}:#{cc.attrs.id}');
            var valueSplit = inputText.value.split("/");
            moment.locale('#{cc.attrs.locale == null ? pt-br : cc.attrs.locale}');
            var data;
            var dialog;
            if (moment.locale() == 'pt-br') {
                dialog = new mdDateTimePicker.default({
                    type: 'date',
                    init: moment().set({'year': valueSplit[2], 'month': valueSplit[1] - 1, 'date': valueSplit[0]}),
                    future: moment()
                });

            } else {
                dialog = new mdDateTimePicker.default({
                    type: 'date',
                    init: moment().set({'year': valueSplit[2], 'month': valueSplit[0] - 1, 'date': valueSplit[1]}),
                    future: moment()
                });
            }
            dialog.trigger = inputText;
            inputText.addEventListener('click', function () {
                dialog.toggle();
            });
            inputText.addEventListener('onOk', function () {
                inputText.value = moment(new Date(dialog.time.toString())).utc().format('#{cc.attrs.mask.toUpperCase()}');
            });
        </script>
    </composite:implementation>
</html>